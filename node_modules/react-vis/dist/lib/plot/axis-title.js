'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _axisUtils = require('../utils/axis-utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright (c) 2016 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

var LEFT = _axisUtils.ORIENTATION.LEFT;
var RIGHT = _axisUtils.ORIENTATION.RIGHT;
var TOP = _axisUtils.ORIENTATION.TOP;
var BOTTOM = _axisUtils.ORIENTATION.BOTTOM;


var propTypes = {
  width: _react2.default.PropTypes.number.isRequired,
  height: _react2.default.PropTypes.number.isRequired,
  orientation: _react2.default.PropTypes.oneOf([LEFT, RIGHT, TOP, BOTTOM]).isRequired,
  title: _react2.default.PropTypes.string.isRequired
};

function AxisTitle(_ref) {
  var orientation = _ref.orientation;
  var width = _ref.width;
  var height = _ref.height;
  var title = _ref.title;

  var style = void 0;
  if (orientation === LEFT) {
    style = {
      transform: 'translate(1em, 0) rotate(-90deg)',
      textAnchor: 'end'
    };
  } else if (orientation === RIGHT) {
    style = {
      transform: 'translate(-1em, 0) rotate(-90deg)',
      textAnchor: 'end'
    };
  } else if (orientation === BOTTOM) {
    style = {
      transform: 'translate(' + width + ', 0)',
      textAnchor: 'end'
    };
  }
  return _react2.default.createElement(
    'g',
    { style: style, className: 'rv-xy-plot__axis__title' },
    _react2.default.createElement(
      'text',
      null,
      title
    )
  );
}

AxisTitle.displayName = 'AxisTitle';
AxisTitle.propTypes = propTypes;

exports.default = AxisTitle;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvcGxvdC9heGlzLXRpdGxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQW9CQTs7OztBQUNBOzs7O0FBckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztJQUtPLEksMEJBQUEsSTtJQUFNLEssMEJBQUEsSztJQUFPLEcsMEJBQUEsRztJQUFLLE0sMEJBQUEsTTs7O0FBRXpCLElBQU0sWUFBWTtBQUNoQixTQUFPLGdCQUFNLFNBQU4sQ0FBZ0IsTUFBaEIsQ0FBdUIsVUFEZDtBQUVoQixVQUFRLGdCQUFNLFNBQU4sQ0FBZ0IsTUFBaEIsQ0FBdUIsVUFGZjtBQUdoQixlQUFhLGdCQUFNLFNBQU4sQ0FBZ0IsS0FBaEIsQ0FBc0IsQ0FDakMsSUFEaUMsRUFDM0IsS0FEMkIsRUFDcEIsR0FEb0IsRUFDZixNQURlLENBQXRCLEVBRVYsVUFMYTtBQU1oQixTQUFPLGdCQUFNLFNBQU4sQ0FBZ0IsTUFBaEIsQ0FBdUI7QUFOZCxDQUFsQjs7QUFTQSxTQUFTLFNBQVQsT0FBd0Q7QUFBQSxNQUFwQyxXQUFvQyxRQUFwQyxXQUFvQztBQUFBLE1BQXZCLEtBQXVCLFFBQXZCLEtBQXVCO0FBQUEsTUFBaEIsTUFBZ0IsUUFBaEIsTUFBZ0I7QUFBQSxNQUFSLEtBQVEsUUFBUixLQUFROztBQUN0RCxNQUFJLGNBQUo7QUFDQSxNQUFJLGdCQUFnQixJQUFwQixFQUEwQjtBQUN4QixZQUFRO0FBQ04saUJBQVcsa0NBREw7QUFFTixrQkFBWTtBQUZOLEtBQVI7QUFJRCxHQUxELE1BS08sSUFBSSxnQkFBZ0IsS0FBcEIsRUFBMkI7QUFDaEMsWUFBUTtBQUNOLGlCQUFXLG1DQURMO0FBRU4sa0JBQVk7QUFGTixLQUFSO0FBSUQsR0FMTSxNQUtBLElBQUksZ0JBQWdCLE1BQXBCLEVBQTRCO0FBQ2pDLFlBQVE7QUFDTixnQ0FBd0IsS0FBeEIsU0FETTtBQUVOLGtCQUFZO0FBRk4sS0FBUjtBQUlEO0FBQ0QsU0FDRTtBQUFBO0FBQUEsTUFBRyxPQUFPLEtBQVYsRUFBaUIsV0FBVSx5QkFBM0I7QUFDRTtBQUFBO0FBQUE7QUFBTztBQUFQO0FBREYsR0FERjtBQUtEOztBQUVELFVBQVUsV0FBVixHQUF3QixXQUF4QjtBQUNBLFVBQVUsU0FBVixHQUFzQixTQUF0Qjs7a0JBRWUsUyIsImZpbGUiOiJheGlzLXRpdGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE2IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7T1JJRU5UQVRJT059IGZyb20gJy4uL3V0aWxzL2F4aXMtdXRpbHMnO1xuXG5jb25zdCB7TEVGVCwgUklHSFQsIFRPUCwgQk9UVE9NfSA9IE9SSUVOVEFUSU9OO1xuXG5jb25zdCBwcm9wVHlwZXMgPSB7XG4gIHdpZHRoOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGhlaWdodDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBvcmllbnRhdGlvbjogUmVhY3QuUHJvcFR5cGVzLm9uZU9mKFtcbiAgICBMRUZULCBSSUdIVCwgVE9QLCBCT1RUT01cbiAgXSkuaXNSZXF1aXJlZCxcbiAgdGl0bGU6IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxufTtcblxuZnVuY3Rpb24gQXhpc1RpdGxlKHtvcmllbnRhdGlvbiwgd2lkdGgsIGhlaWdodCwgdGl0bGV9KSB7XG4gIGxldCBzdHlsZTtcbiAgaWYgKG9yaWVudGF0aW9uID09PSBMRUZUKSB7XG4gICAgc3R5bGUgPSB7XG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoMWVtLCAwKSByb3RhdGUoLTkwZGVnKScsXG4gICAgICB0ZXh0QW5jaG9yOiAnZW5kJ1xuICAgIH07XG4gIH0gZWxzZSBpZiAob3JpZW50YXRpb24gPT09IFJJR0hUKSB7XG4gICAgc3R5bGUgPSB7XG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoLTFlbSwgMCkgcm90YXRlKC05MGRlZyknLFxuICAgICAgdGV4dEFuY2hvcjogJ2VuZCdcbiAgICB9O1xuICB9IGVsc2UgaWYgKG9yaWVudGF0aW9uID09PSBCT1RUT00pIHtcbiAgICBzdHlsZSA9IHtcbiAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZSgke3dpZHRofSwgMClgLFxuICAgICAgdGV4dEFuY2hvcjogJ2VuZCdcbiAgICB9XG4gIH1cbiAgcmV0dXJuIChcbiAgICA8ZyBzdHlsZT17c3R5bGV9IGNsYXNzTmFtZT1cInJ2LXh5LXBsb3RfX2F4aXNfX3RpdGxlXCI+XG4gICAgICA8dGV4dD57dGl0bGV9PC90ZXh0PlxuICAgIDwvZz5cbiAgKTtcbn1cblxuQXhpc1RpdGxlLmRpc3BsYXlOYW1lID0gJ0F4aXNUaXRsZSc7XG5BeGlzVGl0bGUucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuXG5leHBvcnQgZGVmYXVsdCBBeGlzVGl0bGU7XG5cbiJdfQ==