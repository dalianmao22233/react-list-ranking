'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; // Copyright (c) 2016 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _discreteColorLegendItem = require('./discrete-color-legend-item');

var _discreteColorLegendItem2 = _interopRequireDefault(_discreteColorLegendItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var propTypes = {
  items: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape(_discreteColorLegendItem2.default.propTypes)),
  onItemClick: _react2.default.PropTypes.func,
  height: _react2.default.PropTypes.number,
  width: _react2.default.PropTypes.number
};

function DiscreteColorLegend(_ref) {
  var items = _ref.items;
  var width = _ref.width;
  var height = _ref.height;
  var onItemClick = _ref.onItemClick;

  var style = {};
  if (width) {
    style.width = width;
  }
  if (height) {
    style.height = height;
  }
  return _react2.default.createElement(
    'div',
    { className: 'rv-discrete-color-legend', style: style },
    items.map(function (item, i) {
      return _react2.default.createElement(_discreteColorLegendItem2.default, _extends({ key: i
      }, item, {
        onClick: onItemClick ? function () {
          return onItemClick(item, i);
        } : null
      }));
    })
  );
}

DiscreteColorLegend.displayName = 'DiscreteColorLegendItem';
DiscreteColorLegend.propTypes = propTypes;

exports.default = DiscreteColorLegend;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvbGVnZW5kL2Rpc2NyZXRlLWNvbG9yLWxlZ2VuZC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7a1FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7Ozs7QUFFQTs7Ozs7O0FBRUEsSUFBTSxZQUFZO0FBQ2hCLFNBQU8sZ0JBQU0sU0FBTixDQUFnQixPQUFoQixDQUNMLGdCQUFNLFNBQU4sQ0FBZ0IsS0FBaEIsQ0FBc0Isa0NBQXdCLFNBQTlDLENBREssQ0FEUztBQUloQixlQUFhLGdCQUFNLFNBQU4sQ0FBZ0IsSUFKYjtBQUtoQixVQUFRLGdCQUFNLFNBQU4sQ0FBZ0IsTUFMUjtBQU1oQixTQUFPLGdCQUFNLFNBQU4sQ0FBZ0I7QUFOUCxDQUFsQjs7QUFTQSxTQUFTLG1CQUFULE9BQWtFO0FBQUEsTUFBcEMsS0FBb0MsUUFBcEMsS0FBb0M7QUFBQSxNQUE3QixLQUE2QixRQUE3QixLQUE2QjtBQUFBLE1BQXRCLE1BQXNCLFFBQXRCLE1BQXNCO0FBQUEsTUFBZCxXQUFjLFFBQWQsV0FBYzs7QUFDaEUsTUFBTSxRQUFRLEVBQWQ7QUFDQSxNQUFJLEtBQUosRUFBVztBQUNULFVBQU0sS0FBTixHQUFjLEtBQWQ7QUFDRDtBQUNELE1BQUksTUFBSixFQUFZO0FBQ1YsVUFBTSxNQUFOLEdBQWUsTUFBZjtBQUNEO0FBQ0QsU0FDRTtBQUFBO0FBQUEsTUFBSyxXQUFVLDBCQUFmLEVBQTBDLE9BQU8sS0FBakQ7QUFDRyxVQUFNLEdBQU4sQ0FBVSxVQUFDLElBQUQsRUFBTyxDQUFQO0FBQUEsYUFDVCw0RUFBeUIsS0FBSztBQUE5QixTQUNNLElBRE47QUFFRSxpQkFBUyxjQUFjO0FBQUEsaUJBQU0sWUFBWSxJQUFaLEVBQWtCLENBQWxCLENBQU47QUFBQSxTQUFkLEdBQTJDO0FBRnRELFNBRFM7QUFBQSxLQUFWO0FBREgsR0FERjtBQVVEOztBQUVELG9CQUFvQixXQUFwQixHQUFrQyx5QkFBbEM7QUFDQSxvQkFBb0IsU0FBcEIsR0FBZ0MsU0FBaEM7O2tCQUVlLG1CIiwiZmlsZSI6ImRpc2NyZXRlLWNvbG9yLWxlZ2VuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNiBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBEaXNjcmV0ZUNvbG9yTGVnZW5kSXRlbSBmcm9tICcuL2Rpc2NyZXRlLWNvbG9yLWxlZ2VuZC1pdGVtJztcblxuY29uc3QgcHJvcFR5cGVzID0ge1xuICBpdGVtczogUmVhY3QuUHJvcFR5cGVzLmFycmF5T2YoXG4gICAgUmVhY3QuUHJvcFR5cGVzLnNoYXBlKERpc2NyZXRlQ29sb3JMZWdlbmRJdGVtLnByb3BUeXBlcylcbiAgKSxcbiAgb25JdGVtQ2xpY2s6IFJlYWN0LlByb3BUeXBlcy5mdW5jLFxuICBoZWlnaHQ6IFJlYWN0LlByb3BUeXBlcy5udW1iZXIsXG4gIHdpZHRoOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyXG59O1xuXG5mdW5jdGlvbiBEaXNjcmV0ZUNvbG9yTGVnZW5kKHtpdGVtcywgd2lkdGgsIGhlaWdodCwgb25JdGVtQ2xpY2t9KSB7XG4gIGNvbnN0IHN0eWxlID0ge307XG4gIGlmICh3aWR0aCkge1xuICAgIHN0eWxlLndpZHRoID0gd2lkdGg7XG4gIH1cbiAgaWYgKGhlaWdodCkge1xuICAgIHN0eWxlLmhlaWdodCA9IGhlaWdodDtcbiAgfVxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicnYtZGlzY3JldGUtY29sb3ItbGVnZW5kXCIgc3R5bGU9e3N0eWxlfT5cbiAgICAgIHtpdGVtcy5tYXAoKGl0ZW0sIGkpID0+XG4gICAgICAgIDxEaXNjcmV0ZUNvbG9yTGVnZW5kSXRlbSBrZXk9e2l9XG4gICAgICAgICAgey4uLml0ZW19XG4gICAgICAgICAgb25DbGljaz17b25JdGVtQ2xpY2sgPyAoKSA9PiBvbkl0ZW1DbGljayhpdGVtLCBpKSA6IG51bGx9XG4gICAgICAgIC8+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufVxuXG5EaXNjcmV0ZUNvbG9yTGVnZW5kLmRpc3BsYXlOYW1lID0gJ0Rpc2NyZXRlQ29sb3JMZWdlbmRJdGVtJztcbkRpc2NyZXRlQ29sb3JMZWdlbmQucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuXG5leHBvcnQgZGVmYXVsdCBEaXNjcmV0ZUNvbG9yTGVnZW5kO1xuIl19