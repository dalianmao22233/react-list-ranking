'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _axisUtils = require('../utils/axis-utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Copyright (c) 2016 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

var LEFT = _axisUtils.ORIENTATION.LEFT;
var RIGHT = _axisUtils.ORIENTATION.RIGHT;
var TOP = _axisUtils.ORIENTATION.TOP;
var BOTTOM = _axisUtils.ORIENTATION.BOTTOM;


var propTypes = {
  width: _react2.default.PropTypes.number.isRequired,
  height: _react2.default.PropTypes.number.isRequired,
  orientation: _react2.default.PropTypes.oneOf([LEFT, RIGHT, TOP, BOTTOM]).isRequired
};

function AxisLine(_ref) {
  var orientation = _ref.orientation;
  var width = _ref.width;
  var height = _ref.height;

  var x1 = void 0;
  var x2 = void 0;
  var y1 = void 0;
  var y2 = void 0;
  if (orientation === LEFT) {
    x1 = width;
    x2 = width;
    y1 = 0;
    y2 = height;
  } else if (orientation === RIGHT) {
    x1 = 0;
    x2 = 0;
    y1 = 0;
    y2 = height;
  } else if (orientation === TOP) {
    x1 = 0;
    x2 = width;
    y1 = height;
    y2 = height;
  } else {
    x1 = 0;
    x2 = width;
    y1 = 0;
    y2 = 0;
  }
  return _react2.default.createElement('line', { x1: x1, x2: x2, y1: y1, y2: y2, className: 'rv-xy-plot__axis__line' });
}

AxisLine.displayName = 'AxisLine';
AxisLine.propTypes = propTypes;

exports.default = AxisLine;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvcGxvdC9heGlzLWxpbmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBb0JBOzs7O0FBQ0E7Ozs7QUFyQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0lBS08sSSwwQkFBQSxJO0lBQU0sSywwQkFBQSxLO0lBQU8sRywwQkFBQSxHO0lBQUssTSwwQkFBQSxNOzs7QUFFekIsSUFBTSxZQUFZO0FBQ2hCLFNBQU8sZ0JBQU0sU0FBTixDQUFnQixNQUFoQixDQUF1QixVQURkO0FBRWhCLFVBQVEsZ0JBQU0sU0FBTixDQUFnQixNQUFoQixDQUF1QixVQUZmO0FBR2hCLGVBQWEsZ0JBQU0sU0FBTixDQUFnQixLQUFoQixDQUFzQixDQUNqQyxJQURpQyxFQUMzQixLQUQyQixFQUNwQixHQURvQixFQUNmLE1BRGUsQ0FBdEIsRUFFVjtBQUxhLENBQWxCOztBQVFBLFNBQVMsUUFBVCxPQUFnRDtBQUFBLE1BQTdCLFdBQTZCLFFBQTdCLFdBQTZCO0FBQUEsTUFBaEIsS0FBZ0IsUUFBaEIsS0FBZ0I7QUFBQSxNQUFULE1BQVMsUUFBVCxNQUFTOztBQUM5QyxNQUFJLFdBQUo7QUFDQSxNQUFJLFdBQUo7QUFDQSxNQUFJLFdBQUo7QUFDQSxNQUFJLFdBQUo7QUFDQSxNQUFJLGdCQUFnQixJQUFwQixFQUEwQjtBQUN4QixTQUFLLEtBQUw7QUFDQSxTQUFLLEtBQUw7QUFDQSxTQUFLLENBQUw7QUFDQSxTQUFLLE1BQUw7QUFDRCxHQUxELE1BS08sSUFBSSxnQkFBZ0IsS0FBcEIsRUFBMkI7QUFDaEMsU0FBSyxDQUFMO0FBQ0EsU0FBSyxDQUFMO0FBQ0EsU0FBSyxDQUFMO0FBQ0EsU0FBSyxNQUFMO0FBQ0QsR0FMTSxNQUtBLElBQUksZ0JBQWdCLEdBQXBCLEVBQXlCO0FBQzlCLFNBQUssQ0FBTDtBQUNBLFNBQUssS0FBTDtBQUNBLFNBQUssTUFBTDtBQUNBLFNBQUssTUFBTDtBQUNELEdBTE0sTUFLQTtBQUNMLFNBQUssQ0FBTDtBQUNBLFNBQUssS0FBTDtBQUNBLFNBQUssQ0FBTDtBQUNBLFNBQUssQ0FBTDtBQUNEO0FBQ0QsU0FDRSx3Q0FBTSxJQUFJLEVBQVYsRUFBYyxJQUFJLEVBQWxCLEVBQXNCLElBQUksRUFBMUIsRUFBOEIsSUFBSSxFQUFsQyxFQUFzQyxXQUFVLHdCQUFoRCxHQURGO0FBR0Q7O0FBRUQsU0FBUyxXQUFULEdBQXVCLFVBQXZCO0FBQ0EsU0FBUyxTQUFULEdBQXFCLFNBQXJCOztrQkFFZSxRIiwiZmlsZSI6ImF4aXMtbGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNiBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge09SSUVOVEFUSU9OfSBmcm9tICcuLi91dGlscy9heGlzLXV0aWxzJztcblxuY29uc3Qge0xFRlQsIFJJR0hULCBUT1AsIEJPVFRPTX0gPSBPUklFTlRBVElPTjtcblxuY29uc3QgcHJvcFR5cGVzID0ge1xuICB3aWR0aDogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBoZWlnaHQ6IFJlYWN0LlByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgb3JpZW50YXRpb246IFJlYWN0LlByb3BUeXBlcy5vbmVPZihbXG4gICAgTEVGVCwgUklHSFQsIFRPUCwgQk9UVE9NXG4gIF0pLmlzUmVxdWlyZWRcbn07XG5cbmZ1bmN0aW9uIEF4aXNMaW5lKHtvcmllbnRhdGlvbiwgd2lkdGgsIGhlaWdodH0pIHtcbiAgbGV0IHgxO1xuICBsZXQgeDI7XG4gIGxldCB5MTtcbiAgbGV0IHkyO1xuICBpZiAob3JpZW50YXRpb24gPT09IExFRlQpIHtcbiAgICB4MSA9IHdpZHRoO1xuICAgIHgyID0gd2lkdGg7XG4gICAgeTEgPSAwO1xuICAgIHkyID0gaGVpZ2h0O1xuICB9IGVsc2UgaWYgKG9yaWVudGF0aW9uID09PSBSSUdIVCkge1xuICAgIHgxID0gMDtcbiAgICB4MiA9IDA7XG4gICAgeTEgPSAwO1xuICAgIHkyID0gaGVpZ2h0XG4gIH0gZWxzZSBpZiAob3JpZW50YXRpb24gPT09IFRPUCkge1xuICAgIHgxID0gMDtcbiAgICB4MiA9IHdpZHRoO1xuICAgIHkxID0gaGVpZ2h0O1xuICAgIHkyID0gaGVpZ2h0O1xuICB9IGVsc2Uge1xuICAgIHgxID0gMDtcbiAgICB4MiA9IHdpZHRoO1xuICAgIHkxID0gMDtcbiAgICB5MiA9IDA7XG4gIH1cbiAgcmV0dXJuIChcbiAgICA8bGluZSB4MT17eDF9IHgyPXt4Mn0geTE9e3kxfSB5Mj17eTJ9IGNsYXNzTmFtZT1cInJ2LXh5LXBsb3RfX2F4aXNfX2xpbmVcIi8+XG4gICk7XG59XG5cbkF4aXNMaW5lLmRpc3BsYXlOYW1lID0gJ0F4aXNMaW5lJztcbkF4aXNMaW5lLnByb3BUeXBlcyA9IHByb3BUeXBlcztcblxuZXhwb3J0IGRlZmF1bHQgQXhpc0xpbmU7XG5cbiJdfQ==